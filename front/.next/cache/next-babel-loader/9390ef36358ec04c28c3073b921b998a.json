{"ast":null,"code":"import { createWrapper } from \"next-redux-wrapper\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport reducer from \"../reducers/index\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nvar configureStore = function configureStore() {\n  var middlewares = [];\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) : composeWithDevTools(applyMiddleware.apply(void 0, middlewares)); // store = state + reducer\n\n  var store = createStore(reducer, engancer);\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper; // contextAPI vs Redux (비동기를 지원하기 쉽냐 어렵냐)\n// contextAPI - 소규모 어플리케이션 (비동기의 과정 요청, 성공, 실패를 직접 다 구현해야함)\n// Redux - 간단하기 때문에 에러를 잘 해결할 수 있음 / 코드량이 많아짐 (데이터가 커짐에 따라 리듀서를 사용하여 분리가능)\n// mobx - 에러를 추격하기 힘들어 잘 해결할 수 없음 / 코드량이 적음","map":{"version":3,"sources":["C:/Users/dlgyd/OneDrive/문서/GitHub/nodeBird/front/store/configureStore.js"],"names":["createWrapper","createStore","applyMiddleware","compose","reducer","composeWithDevTools","configureStore","middlewares","enhancer","store","engancer","wrapper","debug"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,mBAAT,QAAoC,0BAApC;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,MAAMC,WAAW,GAAG,EAApB;AACA,MAAMC,QAAQ,GACZ,QACIL,OAAO,CAACD,eAAe,MAAf,SAAmBK,WAAnB,CAAD,CADX,GAEIF,mBAAmB,CAACH,eAAe,MAAf,SAAmBK,WAAnB,CAAD,CAHzB,CAF2B,CAM3B;;AACA,MAAME,KAAK,GAAGR,WAAW,CAACG,OAAD,EAAUM,QAAV,CAAzB;AACA,SAAOD,KAAP;AACD,CATD;;AAWA,IAAME,OAAO,GAAGX,aAAa,CAACM,cAAD,EAAiB;AAC5CM,EAAAA,KAAK;AADuC,CAAjB,CAA7B;AAIA,eAAeD,OAAf,C,CAEA;AAEA;AACA;AACA","sourcesContent":["import { createWrapper } from \"next-redux-wrapper\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reducer from \"../reducers/index\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst configureStore = () => {\r\n  const middlewares = [];\r\n  const enhancer =\r\n    process.env.NODE_ENV === \"production\"\r\n      ? compose(applyMiddleware(...middlewares))\r\n      : composeWithDevTools(applyMiddleware(...middlewares));\r\n  // store = state + reducer\r\n  const store = createStore(reducer, engancer);\r\n  return store;\r\n};\r\n\r\nconst wrapper = createWrapper(configureStore, {\r\n  debug: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nexport default wrapper;\r\n\r\n// contextAPI vs Redux (비동기를 지원하기 쉽냐 어렵냐)\r\n\r\n// contextAPI - 소규모 어플리케이션 (비동기의 과정 요청, 성공, 실패를 직접 다 구현해야함)\r\n// Redux - 간단하기 때문에 에러를 잘 해결할 수 있음 / 코드량이 많아짐 (데이터가 커짐에 따라 리듀서를 사용하여 분리가능)\r\n// mobx - 에러를 추격하기 힘들어 잘 해결할 수 없음 / 코드량이 적음\r\n"]},"metadata":{},"sourceType":"module"}