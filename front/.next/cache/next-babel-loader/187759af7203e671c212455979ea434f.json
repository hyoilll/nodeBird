{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\dlgyd\\\\OneDrive\\\\\\uBB38\\uC11C\\\\GitHub\\\\nodeBird\\\\front\\\\components\\\\PostCard.js\";\nimport { Button, Card, Popover } from \"antd\";\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined } from \"@ant-design/icons\";\nimport PropTypes from \"prop-types\";\nimport { useSelector } from \"react-redux\";\nimport Avatar from \"antd/lib/avatar/avatar\";\nimport PostImages from \"../components/PostImages\";\nimport { useState } from \"react\";\n\nconst PostCard = ({\n  post\n}) => {\n  const {\n    me\n  } = useSelector(state => state.user);\n  const id = me && me.id; // == me?.id <optional chaining>\n\n  const {\n    0: liked,\n    1: setLiked\n  } = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n          images: post.Images\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 36\n        }, this),\n        actions: [\n        /*#__PURE__*/\n        // jsx에서 배열을 작성할 때는 key를 항상 작성\n        _jsxDEV(RetweetOutlined, {}, \"retweet\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(HeartOutlined, {}, \"heart\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MessageOutlined, {}, \"comment\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Popover, {\n          content: /*#__PURE__*/_jsxDEV(Button.Group, {\n            children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"danger\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC2E0\\uACE0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)\n        }, \"more\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)],\n        children: /*#__PURE__*/_jsxDEV(Card.Meta, {\n          avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n            children: post.User.nickname[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 21\n          }, this),\n          title: post.User.nickname,\n          description: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"sources":["C:/Users/dlgyd/OneDrive/문서/GitHub/nodeBird/front/components/PostCard.js"],"names":["Button","Card","Popover","RetweetOutlined","HeartOutlined","MessageOutlined","EllipsisOutlined","PropTypes","useSelector","Avatar","PostImages","useState","PostCard","post","me","state","user","id","liked","setLiked","marginBottom","Images","User","nickname","content","propTypes","shape","number","object","string","createAt","Comments","arrayOf","isRequired"],"mappings":"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","sourcesContent":["import { Button, Card, Popover } from \"antd\";\r\nimport {\r\n  RetweetOutlined,\r\n  HeartOutlined,\r\n  MessageOutlined,\r\n  EllipsisOutlined,\r\n} from \"@ant-design/icons\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Avatar from \"antd/lib/avatar/avatar\";\r\nimport PostImages from \"../components/PostImages\";\r\nimport { useState } from \"react\";\r\n\r\nconst PostCard = ({ post }) => {\r\n  const { me } = useSelector((state) => state.user);\r\n  const id = me && me.id; // == me?.id <optional chaining>\r\n\r\n  const [liked, setLiked] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <div style={{ marginBottom: \"20px\" }}>\r\n        <Card\r\n          cover={post.Images[0] && <PostImages images={post.Images} />}\r\n          actions={[\r\n            // jsx에서 배열을 작성할 때는 key를 항상 작성\r\n            <RetweetOutlined key=\"retweet\"></RetweetOutlined>,\r\n            <HeartOutlined key=\"heart\"></HeartOutlined>,\r\n            <MessageOutlined key=\"comment\"></MessageOutlined>,\r\n            <Popover\r\n              key=\"more\"\r\n              content={\r\n                <Button.Group>\r\n                  {id && post.User.id === id ? (\r\n                    <>\r\n                      <Button>Update</Button>\r\n                      <Button type=\"danger\">Delete</Button>\r\n                    </>\r\n                  ) : (\r\n                    <Button>신고</Button>\r\n                  )}\r\n                </Button.Group>\r\n              }\r\n            >\r\n              <EllipsisOutlined></EllipsisOutlined>\r\n            </Popover>,\r\n          ]}\r\n        >\r\n          <Card.Meta\r\n            avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n            title={post.User.nickname}\r\n            description={post.content}\r\n          ></Card.Meta>\r\n        </Card>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nPostCard.propTypes = {\r\n  post: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    User: PropTypes.object,\r\n    content: PropTypes.string,\r\n    createAt: PropTypes.object,\r\n    Comments: PropTypes.arrayOf(PropTypes.object),\r\n    Images: PropTypes.arrayOf(PropTypes.object),\r\n  }).isRequired,\r\n};\r\n\r\nexport default PostCard;\r\n"]},"metadata":{},"sourceType":"module"}