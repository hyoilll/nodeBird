{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\dlgyd\\\\OneDrive\\\\\\uBB38\\uC11C\\\\GitHub\\\\nodeBird\\\\front\\\\components\\\\LoginForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  padding: 10px;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  margin-top: 10px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useCallback, useState } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport Link from \"next/link\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport useInput from \"../hooks/useinput\";\nvar ButtonWrapper = styled.div(_templateObject());\n_c = ButtonWrapper;\nvar FormWrapper = styled(Form)(_templateObject2());\n_c2 = FormWrapper;\n\nvar LoginForm = function LoginForm(_ref) {\n  _s();\n\n  var setIsLoggedIn = _ref.setIsLoggedIn;\n\n  // Custom Hooks\n  var _useInput = useInput(\"\"),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      id = _useInput2[0],\n      onChangeId = _useInput2[1];\n\n  var _useInput3 = useInput(\"\"),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      pw = _useInput4[0],\n      onChangePw = _useInput4[1]; //   component의 props로 넘겨주는 callback은 useCallback을 사용 => 최적화\n  //   해당 컴포넌트가 랜더링되더라고 그 함수가 의존하는 값들이 바뀌지 않는 한 기존함수를 계속해서 반환\n  // const [id, setId] = useState(\"\");\n  // const onChangeId = useCallback((e) => {\n  //   setId(e.target.value);\n  // }, []);\n  // const [pw, setPw] = useState(\"\");\n  // const onChangePw = useCallback((e) => {\n  //   setPw(e.target.value);\n  // }, []);\n\n\n  var onSubmitForm = useCallback(function () {\n    //   onFinish는 e.preventDefault가 적용되어 있음\n    console.log(id, pw);\n    setIsLoggedIn(true);\n  }, [id, pw]);\n  return /*#__PURE__*/_jsxDEV(FormWrapper, {\n    onFinish: onSubmitForm,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"user-id\",\n        children: \"id\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"user-id\",\n        value: id,\n        onChange: onChangeId,\n        require: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"user-pw\",\n        children: \"pw\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Input, {\n        name: \"user-pw\",\n        type: \"password\",\n        value: pw,\n        onChange: onChangePw,\n        require: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(ButtonWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        loading: false,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Link, {\n        href: \"/signup\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(LoginForm, \"hSmqD360VgnO6fX30SbM5nJVFbE=\", false, function () {\n  return [useInput, useInput];\n});\n\n_c3 = LoginForm;\nLoginForm.propTypes = {\n  setIsLoggedIn: PropTypes.func.isRequired\n};\nexport default LoginForm;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ButtonWrapper\");\n$RefreshReg$(_c2, \"FormWrapper\");\n$RefreshReg$(_c3, \"LoginForm\");","map":{"version":3,"sources":["C:/Users/dlgyd/OneDrive/문서/GitHub/nodeBird/front/components/LoginForm.js"],"names":["React","useCallback","useState","Form","Input","Button","Link","styled","PropTypes","useInput","ButtonWrapper","div","FormWrapper","LoginForm","setIsLoggedIn","id","onChangeId","pw","onChangePw","onSubmitForm","console","log","propTypes","func","isRequired"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,QAA6C,OAA7C;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AAEA,IAAMC,aAAa,GAAGH,MAAM,CAACI,GAAV,mBAAnB;KAAMD,a;AAIN,IAAME,WAAW,GAAGL,MAAM,CAACJ,IAAD,CAAT,oBAAjB;MAAMS,W;;AAIN,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAuB;AAAA;;AAAA,MAApBC,aAAoB,QAApBA,aAAoB;;AACvC;AADuC,kBAEdL,QAAQ,CAAC,EAAD,CAFM;AAAA;AAAA,MAEhCM,EAFgC;AAAA,MAE5BC,UAF4B;;AAAA,mBAGdP,QAAQ,CAAC,EAAD,CAHM;AAAA;AAAA,MAGhCQ,EAHgC;AAAA,MAG5BC,UAH4B,kBAKvC;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEA,MAAMC,YAAY,GAAGlB,WAAW,CAAC,YAAM;AACrC;AACAmB,IAAAA,OAAO,CAACC,GAAR,CAAYN,EAAZ,EAAgBE,EAAhB;AACAH,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAJ+B,EAI7B,CAACC,EAAD,EAAKE,EAAL,CAJ6B,CAAhC;AAMA,sBACE,QAAC,WAAD;AAAa,IAAA,QAAQ,EAAEE,YAAvB;AAAA,4BACE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAsB,QAAA,KAAK,EAAEJ,EAA7B;AAAiC,QAAA,QAAQ,EAAEC,UAA3C;AAAuD,QAAA,OAAO;AAA9D;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAKE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,SADP;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,KAAK,EAAEC,EAHT;AAIE,QAAA,QAAQ,EAAEC,UAJZ;AAKE,QAAA,OAAO;AALT;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aALF,eAeE,QAAC,aAAD;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,QAAQ,EAAC,QAAhC;AAAyC,QAAA,OAAO,EAAE,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAIE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC,SAAX;AAAA,+BACE;AAAA,iCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eAJF;AAAA;AAAA;AAAA;AAAA;AAAA,aAfF,eAyBE;AAAA;AAAA;AAAA;AAAA,aAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AA6BD,CApDD;;GAAML,S;UAEqBJ,Q,EACAA,Q;;;MAHrBI,S;AAsDNA,SAAS,CAACS,SAAV,GAAsB;AACpBR,EAAAA,aAAa,EAAEN,SAAS,CAACe,IAAV,CAAeC;AADV,CAAtB;AAIA,eAAeX,SAAf","sourcesContent":["import React, { useCallback, useState } from \"react\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport Link from \"next/link\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport useInput from \"../hooks/useinput\";\r\n\r\nconst ButtonWrapper = styled.div`\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst FormWrapper = styled(Form)`\r\n  padding: 10px;\r\n`;\r\n\r\nconst LoginForm = ({ setIsLoggedIn }) => {\r\n  // Custom Hooks\r\n  const [id, onChangeId] = useInput(\"\");\r\n  const [pw, onChangePw] = useInput(\"\");\r\n\r\n  //   component의 props로 넘겨주는 callback은 useCallback을 사용 => 최적화\r\n  //   해당 컴포넌트가 랜더링되더라고 그 함수가 의존하는 값들이 바뀌지 않는 한 기존함수를 계속해서 반환\r\n  // const [id, setId] = useState(\"\");\r\n  // const onChangeId = useCallback((e) => {\r\n  //   setId(e.target.value);\r\n  // }, []);\r\n\r\n  // const [pw, setPw] = useState(\"\");\r\n  // const onChangePw = useCallback((e) => {\r\n  //   setPw(e.target.value);\r\n  // }, []);\r\n\r\n  const onSubmitForm = useCallback(() => {\r\n    //   onFinish는 e.preventDefault가 적용되어 있음\r\n    console.log(id, pw);\r\n    setIsLoggedIn(true);\r\n  }, [id, pw]);\r\n\r\n  return (\r\n    <FormWrapper onFinish={onSubmitForm}>\r\n      <div>\r\n        <label htmlFor=\"user-id\">id</label>\r\n        <Input name=\"user-id\" value={id} onChange={onChangeId} require />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"user-pw\">pw</label>\r\n        <Input\r\n          name=\"user-pw\"\r\n          type=\"password\"\r\n          value={pw}\r\n          onChange={onChangePw}\r\n          require\r\n        />\r\n      </div>\r\n      <ButtonWrapper>\r\n        <Button type=\"primary\" htmlType=\"submit\" loading={false}>\r\n          Login\r\n        </Button>\r\n        <Link href=\"/signup\">\r\n          <a>\r\n            <Button>Sign Up</Button>\r\n          </a>\r\n        </Link>\r\n      </ButtonWrapper>\r\n      <div></div>\r\n    </FormWrapper>\r\n  );\r\n};\r\n\r\nLoginForm.propTypes = {\r\n  setIsLoggedIn: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}