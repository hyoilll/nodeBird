{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { HYDRATE } from \"next-redux-wrapper\";\nimport { combinReducers } from \"redux\";\nimport user from \"./user\";\nimport post from \"./post\";\nvar initialState = {\n  user: {},\n  post: {}\n}; // action creator\n\nvar changeNickname = function changeNickname(data) {\n  return {\n    type: \"CHANGE_NICKNAME\",\n    data: data\n  };\n}; // changeNickname(\"leehyoil\");\n// {\n//     type:\"CHANGE_NICKNAME\",\n//     data:\"leehyoil\"\n// }\n// (이전상태, 액션) => 다음상태\n\n\nvar rootReducer = function rootReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"HYDRATE\":\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    default:\n      // 맨 처음 reducer 초기화시 default값이 없으면 return undefined가 되기 때문에 적어줌\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["C:/Users/dlgyd/OneDrive/문서/GitHub/nodeBird/front/reducers/index.js"],"names":["HYDRATE","combinReducers","user","post","initialState","changeNickname","data","type","rootReducer","state","action","payload"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,oBAAxB;AACA,SAASC,cAAT,QAA+B,OAA/B;AAEA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,IAAMC,YAAY,GAAG;AACnBF,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,IAAI,EAAE;AAFa,CAArB,C,CAKA;;AACA,IAAME,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAU;AAC/B,SAAO;AACLC,IAAAA,IAAI,EAAE,iBADD;AAELD,IAAAA,IAAI,EAAEA;AAFD,GAAP;AAID,CALD,C,CAOA;AACA;AACA;AACA;AACA;AAEA;;;AACA,IAAME,WAAW,GAAG,SAAdA,WAAc,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AACpD,UAAQA,MAAM,CAACH,IAAf;AACE,SAAK,SAAL;AACE,6CAAYE,KAAZ,GAAsBC,MAAM,CAACC,OAA7B;;AAEF;AACE;AACA,aAAOF,KAAP;AANJ;AAQD,CATD;;AAWA,eAAeD,WAAf","sourcesContent":["import { HYDRATE } from \"next-redux-wrapper\";\r\nimport { combinReducers } from \"redux\";\r\n\r\nimport user from \"./user\";\r\nimport post from \"./post\";\r\n\r\nconst initialState = {\r\n  user: {},\r\n  post: {},\r\n};\r\n\r\n// action creator\r\nconst changeNickname = (data) => {\r\n  return {\r\n    type: \"CHANGE_NICKNAME\",\r\n    data: data,\r\n  };\r\n};\r\n\r\n// changeNickname(\"leehyoil\");\r\n// {\r\n//     type:\"CHANGE_NICKNAME\",\r\n//     data:\"leehyoil\"\r\n// }\r\n\r\n// (이전상태, 액션) => 다음상태\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"HYDRATE\":\r\n      return { ...state, ...action.payload };\r\n\r\n    default:\r\n      // 맨 처음 reducer 초기화시 default값이 없으면 return undefined가 되기 때문에 적어줌\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default rootReducer;\r\n"]},"metadata":{},"sourceType":"module"}